[{"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/index.tsx":"1","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/reportWebVitals.ts":"2","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/App.tsx":"3","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/Chat.tsx":"4","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/Chatbox/Chatbox.tsx":"5","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/chatbox/Chatbox.tsx":"6","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/userslist/Userslist.tsx":"7","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/sentiment/Sentiment.tsx":"8"},{"size":500,"mtime":1607470373703,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1607470373704,"results":"11","hashOfConfig":"10"},{"size":295,"mtime":1607473323248,"results":"12","hashOfConfig":"10"},{"size":4245,"mtime":1608089452033,"results":"13","hashOfConfig":"10"},{"size":827,"mtime":1607480995309,"results":"14","hashOfConfig":"10"},{"size":1715,"mtime":1607492950876,"results":"15","hashOfConfig":"10"},{"size":483,"mtime":1607492523081,"results":"16","hashOfConfig":"10"},{"size":312,"mtime":1607481426088,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pn2bi7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/index.tsx",[],["37","38"],"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/reportWebVitals.ts",[],"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/App.tsx",[],"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/Chat.tsx",[],"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/Chatbox/Chatbox.tsx",[],"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/chatbox/Chatbox.tsx",["39"],"import { send } from 'process';\nimport React from 'react';\nimport './Chatbox.css';\n\ninterface Props {\n    YourID: any;\n    messages: Array<any>;\n    message: string;\n    setMessage: (message: string) => void;\n    sendMessage: (any) => void;\n};\n\nexport function Chatbox(props: Props) {\n\n    const { YourID, messages, message, setMessage, sendMessage } = props\n\n    return (\n\n\n\n        <div className=\"chat-card card\">\n\n            {/* Chat log */}\n            <h2 className=\"invert-color\">Chat</h2>\n            <div className=\"scrollable chat-box\">\n                {\n                    messages.length > 0 \n                    \n                    ? \n\n                    messages.map((cur_message, index) => {\n\n                        if (cur_message.id === YourID) {\n                            return (\n                                <div key={index} className=\"message me\">{cur_message.body}</div>\n                            );\n                        } else {\n                            return (\n                                <div key={index} className=\"message you\">{cur_message.username}: {cur_message.body}</div>\n                            );\n                        }\n    \n                    })\n\n                    :\n\n                    <div>No messages yet.</div>\n\n                }\n\n            </div>\n\n            {/* New chat message */}\n            <div className=\"new-chat invert-color\">\n                <input className=\"chat-input\" placeholder=\"Enter chat message here\" value={message} onChange={event =>setMessage(event.target.value)}></input>\n                <button className=\"submit-button\" onClick={event => sendMessage(event)}>Send</button>\n            </div>\n        </div>\n    );\n}","/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/userslist/Userslist.tsx",[],["40","41"],"/Users/devalparikh/Documents/Development/Github/NLP_Chat_App/nlp-chat-client/src/components/chat/sentiment/Sentiment.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":10,"nodeType":"48","messageId":"49","endLine":1,"endColumn":14},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'send' is defined but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]